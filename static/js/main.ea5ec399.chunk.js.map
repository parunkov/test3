{"version":3,"sources":["components/Navbar/Navbar.jsx","redux/login-reducer.js","components/Navbar/NavbarContaiter.jsx","redux/terminals-reducer.js","utils/validators.js","components/common/FormsControl.jsx","components/Terminals/Terminals.jsx","hoc/withAuthRedirect.js","components/Terminals/TerminalsContainer.jsx","components/Buyers/Buyers.jsx","redux/buyers-reducer.js","redux/buyer-reducer.js","components/Buyers/BuyersContainer.jsx","components/Buyer/Buyer.jsx","components/Buyer/BuyerContainer.jsx","components/Login/Login.jsx","components/Login/LoginContainer.jsx","redux/store.js","App.js","serviceWorker.js","index.js","components/common/FormsControl.module.scss"],"names":["Navbar","isLogined","avatarUrl","logout","className","src","alt","onClick","to","activeClassName","LOGOUT","initialState","login","getUser","user","type","loginReducer","state","action","connect","terminals","maxId","terminalsReducer","id","name","description","filter","item","required","value","lowercaseLetter","match","uppercaseLetter","digit","length","FormsControl","input","meta","touched","error","props","hasError","styles","formControl","children","Input","restProps","title","Textarea","TerminalsReduxForm","reduxForm","form","handleSubmit","onSubmit","Field","component","validate","Terminals","addTerminal","removeTerminal","reset","TerminalsTableRow","TerminalsTable","map","key","formData","mapStateToPropsForRedirect","isAuth","withAuthRedirect","Component","RedirectComponent","this","React","compose","Buyers","filteredBuyers","filtered","sortedBuyers","reversed","sortedById","sortedByCheck","sortedByAmount","sortedByProceeds","sortByCheck","sortById","sortByAmount","sortByProceeds","clearFilter","setCurrentBuyerId","reverseBuyers","useState","showedBuyersValue","setShowedBuyersValue","page","setPage","setShowedBuyers","slice","showedBuyers","reverse","BuyersReduxForm","BuyersTableRow","check","amount","proceeds","href","Button","sort","sorted","BuyersTable","disabled","FILTER","REVERSE","initialBuyers","buyersReducer","a","b","currentBuyerId","buyerReducer","buyers","Buyer","buyer","LoginReduxForm","Login","checkLogin","dispatch","fetch","then","successResponse","status","json","failResponse","result","avatar_url","reducers","combineReducers","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","App","NavbarContaiter","exact","path","render","TerminalsContainer","BuyersContainer","BuyerContainer","LoginContainer","RoutedApp","Boolean","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message","module","exports"],"mappings":"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","file":"static/js/main.ea5ec399.chunk.js","sourcesContent":["import React from 'react';\nimport './Navbar.scss';\nimport {NavLink} from 'react-router-dom';\n\nconst Navbar = ({isLogined, avatarUrl, logout}) => {\n\treturn ( \n\t\t\t<div className=\"Navbar\">\n\t\t\t\t{isLogined && <div className=\"Navbar__header\">\n\t\t\t\t\t<img className=\"Navbar__avatar\" src={avatarUrl} alt=\"avatar\"/>\n\t\t\t\t\t<button onClick={() => logout()}>Выйти</button>\n\t\t\t\t</div>}\n\t\t\t\t<div className=\"Navbar__content\">\n\t\t\t\t\t<nav>\n\t\t\t\t\t\t<NavLink to=\"/terminals\" className=\"Navbar__link\" activeClassName=\"Navbar__link_active\">\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\tТерминалы\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t<NavLink to=\"/buyers\" className=\"Navbar__link\" activeClassName=\"Navbar__link_active\">\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\tПокупатели \n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t{/*<NavLink to=\"/buyers/id\" activeClassName={styles.activeLink}>\n\t\t\t\t\t\t\t<div className={cn(styles.item, styles.item_news)}>\n\t\t\t\t\t\t\t\tПокупатель\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</NavLink>*/}\n\t\t\t\t\t</nav>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"Navbar__footer\">Copyright © 2020</div>\n\t\t\t</div>\n\t\t);\n}\n\nexport default Navbar;\n\n","const GET_USER = 'login/GET_USER';\nconst LOGOUT = 'login/LOGOUT';\n\nconst initialState = {\n\tlogin: null,\n\tisLogined: false,\n\tavatarUrl: null\n}\n\nconst loginReducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase GET_USER: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tlogin: action.user,\n\t\t\t\tavatarUrl: action.avatarUrl,\n\t\t\t\tisLogined: action.isLogined\n\t\t\t}\n\t\t}\n\t\tcase LOGOUT: {\n\t\t\treturn {\n\t\t\t\t...initialState\n\t\t\t}\n\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nconst getUser = (user, avatarUrl, isLogined) => ({\n\ttype: GET_USER,\n\tuser,\n\tavatarUrl,\n\tisLogined\n});\nexport const logout = () => ({type: LOGOUT});\n\nexport const checkLogin = (user) => async (dispatch) => {\n\tconst result = await fetch(`https://api.github.com/users/${user}`).then(\n      successResponse => {\n        if (successResponse.status !== 200) {\n          return null;\n        } else {\n          return successResponse.json();\n        }\n      },\n      failResponse => {\n        return null;\n      }\n    );\n    if (result) {\n    \tdispatch(getUser(user, result.avatar_url, true));\n    }\n}\nexport default loginReducer;","import Navbar from './Navbar';\nimport {connect} from 'react-redux';\nimport {logout} from '../../redux/login-reducer';\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tavatarUrl: state.login.avatarUrl,\n\t\tisLogined: state.login.isLogined\n\t}\n}\n\nexport default connect(mapStateToProps, {logout})(Navbar);","const ADD_TERMINAL = 'terminals/ADD_TERMINAL';\nconst REMOVE_TERMINAL = 'terminals?REMOVE_TERMINAL';\n\nconst initialState = {\n\tterminals: [],\n\tmaxId: 0\n}\nconst terminalsReducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase ADD_TERMINAL: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmaxId: action.maxId,\n\t\t\t\tterminals: [...state.terminals,\n\t\t\t\t{\n\t\t\t\t\tid: action.id,\n\t\t\t\t\tname: action.name,\n\t\t\t\t\tdescription: action.description\n\t\t\t\t}]\n\t\t\t}\n\t\t}\n\t\tcase REMOVE_TERMINAL: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tterminals: state.terminals.filter(item => item.id !== action.id)\n\t\t\t}\n\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport const addTerminal = (id, name, description, maxId) => ({\n\ttype: ADD_TERMINAL,\n\tid,\n\tname,\n\tdescription,\n\tmaxId\n});\nexport const removeTerminal = (id) => ({\n\ttype: REMOVE_TERMINAL,\n\tid\n});\n\nexport default terminalsReducer;","export const required = value => {\n\tif (value) return undefined;\n\treturn 'Обязательное поле';\n}\nexport const lowercaseLetter = value => {\n\tif (value.match(/[a-z]/)) return undefined;\n\treturn 'Должна быть хотя бы одна маленькая английская буква';\n}\nexport const uppercaseLetter = value => {\n\tif (value.match(/[A-Z]/)) return undefined;\n\treturn 'Должна быть хотя бы одна большая английская буква';\n}\nexport const digit = value => {\n\tif (value.match(/\\d/)) return undefined;\n\treturn 'Должна быть хотя бы одна цифра';\n}\nexport const length = value => {\n\tif (value.length > 7) return undefined;\n\treturn 'Не менее восьми символов';\n}\n","import React from 'react';\nimport styles from './FormsControl.module.scss';\n\nconst FormsControl = ({input, meta: {touched, error}, ...props}) => {\n\tconst hasError = touched && error;\n\treturn (\n\t\t<div className={styles.formControl + ' ' + (hasError ? styles.error : ' ')}>\n\t\t\t{props.children}\n\t\t\t{hasError && <span>{error}</span>}\n\t\t</div>\n\t)\n}\n\nexport const Input = (props) => {\n\tconst {input, meta, ...restProps} = props;\n\treturn (\n\t\t<FormsControl {...props}>\n\t\t\t{props.title && <div>{props.title}</div>}\n\t\t\t<input {...input} {...restProps} />\n\t\t</FormsControl>\n\t)\n}\n\nexport const Textarea = (props) => {\n\tconst {input, meta, ...restProps} = props;\n\treturn (\n\t\t<FormsControl {...props}>\n\t\t\t<div>{props.title}</div>\n\t\t\t<textarea {...input} {...restProps} />\n\t\t</FormsControl>\n\t)\n}","import React from 'react';\nimport {reduxForm, Field} from 'redux-form';\nimport {required} from '../../utils/validators';\nimport {Input, Textarea} from '../common/FormsControl';\nimport './Terminals.scss';\n\nconst TerminalsForm = ({handleSubmit, error}) => {\n\treturn (\n\t\t<form onSubmit={handleSubmit}>\n\t\t\t<h2>Добавить терминал</h2>\n\t\t\t<Field component={Input} name={\"name\"} validate={[required]} title=\"Название терминала\" />\n\t\t\t<Field component={Textarea} name={\"description\"} title=\"Описание\"/>\n\t\t\t<div>\n\t\t\t\t<button type={\"submit\"}>Добавить</button>\n\t\t\t</div>\n\t\t</form>\n\t)\n}\n\nconst Terminals = ({terminals, maxId, addTerminal, removeTerminal, reset}) => {\n\n\tconst onSubmit = (formData) => {\n\t\tconst id = maxId + 1;\n\t\taddTerminal(id, formData.name, formData.description, id);\n\t\treset('terminals');\n\t}\n\n\tconst TerminalsTableRow = ({id, name, description, removeTerminal}) => {\n\t\tconst onButtonClick = () => {\n\t\t\tremoveTerminal(id);\n\t\t}\n\t\treturn (\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td>{name}</td>\n\t\t\t\t\t\t<td>{description}</td>\n\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t<button type=\"button\" onClick={onButtonClick}>Удалить</button>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t)\n\t}\n\n\tconst TerminalsTable = () => {\n\t\treturn (\n\t\t\tterminals.map(item => <TerminalsTableRow key={item.id} id={item.id} name={item.name} description={item.description} removeTerminal={removeTerminal} />)\n\t\t)\n\t}\n\n\treturn (\n\t\t<div className=\"Terminals\">\n\t\t\t<TerminalsReduxForm onSubmit={onSubmit} />\n\t\t\t<div>\n\t\t\t\t<h1>Терминалы</h1>\n\t\t\t\t<table className=\"Terminals__table\">\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th>Название</th>\n\t\t\t\t\t\t\t<th>Описание</th>\n\t\t\t\t\t\t\t<th></th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<TerminalsTable />\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nconst TerminalsReduxForm = reduxForm ({\n\tform: 'terminals'\n})(TerminalsForm);\n\nexport default Terminals;","import React from 'react';\nimport {Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux';\n\nconst mapStateToPropsForRedirect = (state) => ({\n\t\tisAuth: state.login.isLogined\n\t});\n\nexport const withAuthRedirect = (Component) => {\n\tclass RedirectComponent extends React.Component {\n\t\trender() {\n\t\t\tif (!this.props.isAuth) {\n\t\t\t\treturn <Redirect to=\"/login\" />\n\t\t\t}\n\t\t\treturn <Component {...this.props} />\n\t\t}\n\t}\n\n\tconst ConnectedRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n\n\treturn ConnectedRedirectComponent;\n}","import {addTerminal, removeTerminal} from '../../redux/terminals-reducer';\nimport Terminals from './Terminals';\nimport {connect} from 'react-redux';\nimport {reset} from 'redux-form';\nimport {compose} from 'redux';\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tterminals: state.terminals.terminals,\n\t\tmaxId: state.terminals.maxId\n\t}\n}\n\nexport default compose(\n\tconnect(mapStateToProps, {addTerminal, removeTerminal, reset}),\n\twithAuthRedirect\n)(Terminals);","import React, {useState} from 'react';\nimport {reduxForm, Field} from 'redux-form';\nimport {Input} from '../common/FormsControl';\nimport './Buyers.scss';\n\nconst Buyers = ({filteredBuyers, sortedBuyers, filtered, reversed, sortedById, sortedByCheck,sortedByAmount, sortedByProceeds, sortByCheck, sortById, sortByAmount, sortByProceeds, filter, clearFilter, setCurrentBuyerId, reverseBuyers}) => {\n\n\tconst [showedBuyersValue, setShowedBuyersValue] = useState(15);\n\tconst [page, setPage] = useState(1);\n\n\tconst setShowedBuyers = (filteredBuyers) => {\n\t\treturn(\n\t\t\tshowedBuyersValue === 5 ?\n\t\t\tfilteredBuyers.slice((page - 1) * showedBuyersValue, page * showedBuyersValue) :\n\t\t\tfilteredBuyers.slice(0, showedBuyersValue)\n\t\t)\n\t}\n\n\tlet showedBuyers = setShowedBuyers(filteredBuyers);\n\tif (reversed) {\n\t\tshowedBuyers = setShowedBuyers(filteredBuyers.reverse());\n\t}\n\n\tconst BuyersForm = ({handleSubmit, error}) => {\n\t\treturn (\n\t\t\t<form onSubmit={handleSubmit} className=\"Buyers__form\">\n\t\t\t\t<Field component={Input} name={\"name\"} />\n\t\t\t\t<button className=\"Buyers__searchButton\" type={\"submit\"}>Найти</button>\n\t\t\t</form>\n\t\t)\n\t}\n\n\tconst BuyersReduxForm = reduxForm ({\n\t\tform: 'buyers'\n\t})(BuyersForm);\n\n\tconst onSubmit = (formData) => {\n\t\tfilter(formData.name);\n\t}\n\n\tconst BuyersTableRow = ({id, name, check, amount, proceeds}) => {\n\t\treturn(\n\t\t\t<tr>\n\t\t\t\t<td><a href=\"/#/buyers/id\" onClick={() => setCurrentBuyerId(id)}>{id}</a></td>\n\t\t\t\t<td>{name}</td>\n\t\t\t\t<td>{check}</td>\n\t\t\t\t<td>{amount}</td>\n\t\t\t\t<td>{proceeds}</td>\n\t\t\t</tr>\n\t\t)\n\t}\n\n\tconst Button = ({sort, sorted}) => {\n\t\tif (sorted && !reversed) {\n\t\t\treturn <button className=\"Buyers__buttonDown\" type=\"button\" onClick={() => reverseBuyers(true)}>По убыванию</button>\n\t\t} else {\n\t\t\treturn <button className=\"Buyers__buttonUp\" type=\"button\" onClick={sort}>По возрастанию</button>\n\t\t}\n\t}\n\n\tconst BuyersTable = ({filteredBuyers}) => {\n\t\treturn (\n\t\t\tshowedBuyers.map(item => <BuyersTableRow key={item.id} id={item.id} name={item.name} check={item.check} amount={item.amount} proceeds={item.proceeds} />)\n\t\t)\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>Покупатели</h1>\n\t\t\t\t<table className=\"Buyers__table\">\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th>ID покупателя</th>\n\t\t\t\t\t\t\t<th>Имя покупателя</th>\n\t\t\t\t\t\t\t<th>Средний чек</th>\n\t\t\t\t\t\t\t<th>Количество покупок</th>\n\t\t\t\t\t\t\t<th>Общая выручка</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<tr className=\"Buyers__buttons\">\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<Button sort={sortById} sorted={sortedById} />\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td className=\"Buyers__filter\">\n\t\t\t\t\t\t\t\t{filtered ? <button className=\"Buyers__buttonClear\" type=\"button\" onClick={clearFilter}>Сбросить фильтр</button> : <BuyersReduxForm onSubmit={onSubmit} />}\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<Button sort={sortByCheck} sorted={sortedByCheck} />\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<Button sort={sortByAmount} sorted={sortedByAmount} />\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t<Button sort={sortByProceeds} sorted={sortedByProceeds} />\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t<BuyersTable filteredBuyers={filteredBuyers} />\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t\t{showedBuyersValue === 5 && <div className=\"Buyers__pagination\">\n\t\t\t\t\t<span>Страница </span>\n\t\t\t\t\t<span className={\"Buyers__paginationItem\" + (page === 1 ? \" Buyers__paginationItem_active\" : \"\")} onClick={() => setPage(1)}>1 </span>\n\t\t\t\t\t<span className={\"Buyers__paginationItem\" + (page === 2 ? \" Buyers__paginationItem_active\" : \"\")} onClick={() => setPage(2)}>2 </span>\n\t\t\t\t\t<span className={\"Buyers__paginationItem\" + (page === 3 ? \" Buyers__paginationItem_active\" : \"\")} onClick={() => setPage(3)}>3 </span>\n\t\t\t\t</div>}\n\t\t\t\t<div className=\"Buyers__itemsValueSelector\">\n\t\t\t\t\t<span>Показывать </span> \n\t\t\t\t\t<button onClick={() => setShowedBuyersValue(5)} disabled={showedBuyersValue === 5}>5</button>\n\t\t\t\t\t<button onClick={() => setShowedBuyersValue(10)} disabled={showedBuyersValue === 10}>10</button>\n\t\t\t\t\t<button onClick={() => setShowedBuyersValue(15)} disabled={showedBuyersValue === 15}>15</button>\n\t\t\t\t\t<span> покупателей</span>\n\t\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Buyers;","const SORTED_BY_CHECK = 'buyers/SORTED_BY_CHECK';\nconst SORTED_BY_ID = 'buyers/SORTED_BY_ID';\nconst SORTED_BY_AMOUNT = 'buyers/SORTED_BY_AMOUNT';\nconst SORTED_BY_PROCEEDS = 'buyers/SORTED_BY_PROCEEDS';\nconst FILTER = 'buyers/FILTER';\nconst FILTER_CLEARED = 'buyers/FILTER_CLEARED';\nconst REVERSE = 'buyers/REVERSE';\n\nconst initialBuyers = [\n\t{id: 1, name: 'Иван', check: 500, amount: 10, proceeds: 5000},\n\t{id: 2, name: 'Андрей', check: 250, amount: 1, proceeds: 250},\n\t{id: 3, name: 'Мария', check: 300, amount: 2, proceeds: 600},\n\t{id: 4, name: 'Анна', check: 100, amount: 10, proceeds: 1000},\n\t{id: 5, name: 'Иван', check: 400, amount: 2, proceeds: 800},\n\t{id: 6, name: 'Анна', check: 1000, amount: 3, proceeds: 3000},\n\t{id: 7, name: 'Иван', check: 900, amount: 1, proceeds: 900},\n\t{id: 8, name: 'Мария', check: 700, amount: 5, proceeds: 3500},\n\t{id: 9, name: 'Олег', check: 800, amount: 8, proceeds: 6400},\n\t{id: 10, name: 'Иван', check: 200, amount: 5, proceeds: 1000},\n\t{id: 11, name: 'Олег', check: 600, amount: 6, proceeds: 3600},\n\t{id: 12, name: 'Наталья', check: 50, amount: 20, proceeds: 1000},\n\t{id: 13, name: 'Максим', check: 150, amount: 4, proceeds: 600},\n\t{id: 14, name: 'Федор', check: 10, amount: 100, proceeds: 1000},\n\t{id: 15, name: 'Глеб', check: 20, amount: 7, proceeds: 140}\n];\n\nconst initialState = {\n\tfilteredBuyers: initialBuyers,\n\tsortedBuyers: initialBuyers,\n\tfiltered: false,\n\tsortedById: true,\n\tsortedByCheck: false,\n\tsortedByAmount: false,\n\tsortedByProceeds: false,\n\treverse: false\n}\n\nconst buyersReducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase SORTED_BY_CHECK: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfilteredBuyers: state.filteredBuyers.sort((a, b) => a.check - b.check),\n\t\t\t\tsortedBuyers: state.sortedBuyers.sort((a, b) => a.check - b.check),\n\t\t\t\tsortedByCheck: true,\n\t\t\t\tsortedById: false,\n\t\t\t\tsortedByAmount: false,\n\t\t\t\tsortedByProceeds: false,\n\t\t\t\treversed: false\n\t\t\t}\n\t\t}\n\t\tcase SORTED_BY_ID: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfilteredBuyers: state.filteredBuyers.sort((a, b) => a.id - b.id),\n\t\t\t\tsortedBuyers: state.sortedBuyers.sort((a, b) => a.id - b.id),\n\t\t\t\tsortedByCheck: false,\n\t\t\t\tsortedById: true,\n\t\t\t\tsortedByAmount: false,\n\t\t\t\tsortedByProceeds: false,\n\t\t\t\treversed: false\n\t\t\t}\n\t\t}\n\t\tcase SORTED_BY_AMOUNT: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfilteredBuyers: state.filteredBuyers.sort((a, b) => a.amount - b.amount),\n\t\t\t\tsortedBuyers: state.sortedBuyers.sort((a, b) => a.amount - b.amount),\n\t\t\t\tsortedByCheck: false,\n\t\t\t\tsortedById: false,\n\t\t\t\tsortedByAmount: true,\n\t\t\t\tsortedByProceeds: false,\n\t\t\t\treversed: false\n\t\t\t}\n\t\t}\n\t\tcase SORTED_BY_PROCEEDS: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfilteredBuyers: state.filteredBuyers.sort((a, b) => a.proceeds - b.proceeds),\n\t\t\t\tsortedBuyers: state.sortedBuyers.sort((a, b) => a.proceeds - b.proceeds),\n\t\t\t\tsortedByCheck: false,\n\t\t\t\tsortedById: false,\n\t\t\t\tsortedByAmount: false,\n\t\t\t\tsortedByProceeds: true,\n\t\t\t\treversed: false\n\t\t\t}\n\t\t}\n\t\tcase FILTER: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfilteredBuyers: state.sortedBuyers.filter(item => item.name === action.name),\n\t\t\t\tfiltered: true\n\t\t\t}\n\t\t}\n\t\tcase FILTER_CLEARED: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfilteredBuyers: state.sortedBuyers,\n\t\t\t\tfiltered: false\n\t\t\t}\n\t\t}\n\t\tcase REVERSE: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\treversed: action.reversed\n\t\t\t}\n\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport const sortByCheck = () => ({\ttype: SORTED_BY_CHECK});\nexport const sortById = () => ({type: SORTED_BY_ID});\nexport const sortByAmount = () => ({type: SORTED_BY_AMOUNT});\nexport const sortByProceeds = () => ({type: SORTED_BY_PROCEEDS});\nexport const filter = (name) => ({\n\ttype: FILTER,\n\tname\n});\nexport const clearFilter = () => ({type: FILTER_CLEARED});\nexport const reverseBuyers = (reversed) => ({\n\ttype: REVERSE,\n\treversed\n});\n\nexport default buyersReducer;","const SET_CURRENT_BUYER_ID = 'buyer/SET_CURRENT_BUYER_ID';\n\nconst initialState = {\n\tcurrentBuyerId: 1\n}\n\nconst buyerReducer = (state = initialState, action) => {\n\tswitch (action.type) {\n\t\tcase SET_CURRENT_BUYER_ID: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentBuyerId: action.id\n\t\t\t}\n\t\t}\n\t\tdefault: \n\t\t\treturn state;\n\t}\n}\n\nexport const setCurrentBuyerId = (id) => ({\n\ttype: SET_CURRENT_BUYER_ID,\n\tid\n});\n\nexport default buyerReducer;","import Buyers from './Buyers';\nimport {connect} from 'react-redux';\nimport {sortByCheck, sortById, sortByAmount, sortByProceeds, filter, clearFilter, reverseBuyers} from '../../redux/buyers-reducer';\nimport {setCurrentBuyerId} from '../../redux/buyer-reducer';\nimport {compose} from 'redux';\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tfilteredBuyers: state.buyers.filteredBuyers,\n\t\tsortedBuyers: state.buyers.sortedBuyers,\n\t\tfiltered: state.buyers.filtered,\n\t\tsortedById: state.buyers.sortedById,\n\t\tsortedByCheck: state.buyers.sortedByCheck,\n\t\tsortedByAmount: state.buyers.sortedByAmount,\n\t\tsortedByProceeds: state.buyers.sortedByProceeds,\n\t\treversed: state.buyers.reversed\n\t}\n}\n\nexport default compose(\n\tconnect(mapStateToProps, {sortByCheck, sortById, sortByAmount, sortByProceeds, filter, clearFilter, setCurrentBuyerId, reverseBuyers}),\n\twithAuthRedirect\n)(Buyers);","import React from 'react';\n\nconst Buyer = ({id, buyers}) => {\n\tconst buyer = buyers.filter(item => item.id === id)[0];\n\treturn (\n\t\t<div>\n\t\t\t<h1>Покупатель</h1>\n\t\t\t<div>ID покупателя - {buyer.id}</div>\n\t\t\t<div>Имя покупателя - {buyer.name}</div>\n\t\t\t<div>Средний чек - {buyer.check} рублей</div>\n\t\t\t<div>Количество покупок - {buyer.amount}</div>\n\t\t\t<div>Общая выручка - {buyer.proceeds} рублей</div>\n\t\t</div>\n\t)\n}\n\nexport default Buyer;","import Buyer from './Buyer';\nimport {connect} from 'react-redux';\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tid: state.buyer.currentBuyerId,\n\t\tbuyers: state.buyers.sortedBuyers\n\t}\n}\n\nexport default connect(mapStateToProps, {})(Buyer);","import React from 'react';\nimport {reduxForm, Field} from 'redux-form';\nimport {required, lowercaseLetter, uppercaseLetter, digit, length} from '../../utils/validators';\nimport {Input} from '../common/FormsControl';\nimport {Redirect} from 'react-router-dom';\nimport './Login.scss';\n\nconst LoginForm = ({handleSubmit, error}) => {\n\treturn (\n\t\t<form onSubmit={handleSubmit} className=\"Login\">\n\t\t\t<h1>Вход</h1>\n\t\t\t<Field component={Input} name={\"login\"} validate={[required]} title=\"Логин\" />\n            <Field component={Input} name={\"password\"} validate={[required, lowercaseLetter, uppercaseLetter, digit, length]} type={\"password\"} title=\"Пароль\" />\n\t\t\t{/*<Field component={Input} name={\"password\"} type={\"password\"} title=\"Пароль\" />*/}\n\t\t\t<div>\n\t\t\t\t<button type={\"submit\"}>Войти</button>\n\t\t\t</div>\n\t\t</form>\n\t)\n}\n\nconst LoginReduxForm = reduxForm ({\n\tform: 'login'\n})(LoginForm);\n\nconst Login = ({isLogined, checkLogin}) => {\n\tconst onSubmit = (formData) => {\n\t\tcheckLogin(formData.login);\n\t}\n\tif (isLogined) {\n\t\treturn <Redirect to={\"/terminals\"} />\n\t}\n\treturn (\n\t\t<LoginReduxForm onSubmit={onSubmit} />\n\t)\n}\n\nexport default Login;","import Login from './Login';\nimport {connect} from 'react-redux';\nimport {checkLogin} from '../../redux/login-reducer';\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tlogin: state.login.login,\n\t\tisLogined: state.login.isLogined\n\t}\n}\n\nexport default connect(mapStateToProps, {checkLogin})(Login);","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\nimport loginReducer from './login-reducer';\nimport terminalsReducer from './terminals-reducer';\nimport buyersReducer from './buyers-reducer';\nimport buyerReducer from './buyer-reducer';\nimport thunkMiddleware from 'redux-thunk';\nimport {reducer as formReducer} from 'redux-form';\n\nconst reducers = combineReducers({\n\tlogin: loginReducer,\n\tterminals: terminalsReducer,\n\tbuyers: buyersReducer,\n\tbuyer: buyerReducer,\n\tform: formReducer\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(\n    applyMiddleware(thunkMiddleware)\n));\n\nexport default store;","import React from 'react';\nimport './App.scss';\nimport NavbarContaiter from './components/Navbar/NavbarContaiter';\nimport TerminalsContainer from'./components/Terminals/TerminalsContainer';\nimport BuyersContainer from './components/Buyers/BuyersContainer';\nimport BuyerContainer from './components/Buyer/BuyerContainer';\nimport LoginContainer from './components/Login/LoginContainer';\nimport {Route, Switch, Redirect} from 'react-router-dom';\nimport store from './redux/store';\nimport {Provider} from 'react-redux';\nimport {HashRouter} from 'react-router-dom';\n\nconst App = () => {\n  return (\n      <div className=\"app\">\n        <div className=\"app-wrapper\">\n          <NavbarContaiter />\n          <div className=\"app-wrapper-content\">\n            <Switch>\n              <Route exact path=\"/\" render={() => <Redirect to=\"/terminals\" />} />\n              <Route path=\"/terminals\" render={() => <TerminalsContainer />} />\n              <Route exact path=\"/buyers\" render={() => <BuyersContainer />} />\n              <Route exact path=\"/buyers/id\" render={() => <BuyerContainer />} />\n              <Route path=\"/login\" render={() => <LoginContainer />} />\n              <Route path=\"*\" render={() => <div>404 NOT FOUND</div>} />\n            </Switch>\n          </div>\n        </div>\n      </div>\n  );\n}\n\nconst RoutedApp = (props) => {\n  return(\n    <HashRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </HashRouter>\n  )\n}\n\nexport default RoutedApp;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.scss';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n\t<App />,\n\tdocument.getElementById('root')\n);\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__1y9LD\",\"error\":\"FormsControl_error__16Fjc\"};"],"sourceRoot":""}